{
  "Welcome": "Добро пожаловать в Slang.CLI",
  "gpt": {
    "description": "Перевести файлы локализации на целевую локализацию с помощью GPT",
    "filePathOption": "Путь к файлу проекта <*.csproj>",
    "apiKeyOption": "Ключ API для OpenAI",
    "targetOption": "Целевая локализация",
    "fullOption": "Пeрезаписать все строки целевой локализации",
    "debugOption": "Записать логи в файл",
    "start_translate": "Начало перевода c помощью GPT ...",
    "csproj_not_found": "Файл проекта csproj {path:string} не найден",
    "csproj_not_found_in_working_dir": "Не удалось найти проект для запуска. Убедитесь, что проект существует в {path:string}, или передайте путь к проекту с помощью --project.",
    "target_cultures": {
      "one": "Целевая культура: {culture:string}",
      "other": "Целевые культуры: {cultures:string}"
    },
    "get_config_error": {
      "missing_description": "Описание не задано",
      "unknown_model": "Неизвестная модель: {model:string}\nДоступные модели: {models:string}",
      "config_not_found": "Конфигурация не найдена",
      "config_not_serialized": "Не получилось десериализовать конфигурацию"
    },
    "gpt_config(ignoreGpt)": "GPT config: {modelId:string} / {maxInputLength:int} max input length / {temperature:string} temperature",
    "excludes(ignoreGpt)": "Excludes: {cultures:string}",
    "start_translate_locale": "Переводим <{locale}> в <{targetCulture}> для {fileName:string} ...",
    "partial_translate": " -> Частичный перевод для {filePath}",
    "start_request": " -> Запрос #{promptCount}",
    "no_new_translations": " -> Нет новых строк для перевода",
    "end_translate": " -> Выходной файл: {targetPath}",
    "result": {
      "summary": "Итого:",
      "total_requests": "Всего запросов: {promptCount:int}",
      "total_input_tokens": "Всего входящих токенов: {inputTokens:int}",
      "total_output_tokens": "Всего исходящих токенов: {outputTokens:int}",
      "total_cost": "Общая стоимость: {totalCost:string} ({inputTokens:int} x {perInputTokenCost:string} + {outputTokens:int} x {perOutputTokenCost:string})"
    }
  },
  "migrate": {
    "description": "Перенос строк из .resx файла в .i18n.json файл"
  }
}